C51 COMPILER V9.60.7.0   DS1307                                                            04/10/2023 13:50:05 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS1307
OBJECT MODULE PLACED IN .\Objects\ds1307.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ds1307.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ds
                    -1307.lst) TABS(2) OBJECT(.\Objects\ds1307.obj)

line level    source

   1          
   2          #include<reg51.h> 
   3          #include "ds1307.h"
   4          #include "i2c.h"
   5          #include "delay.h"
   6            
   7          /* Below given values are fixed and should not be changed.
   8              Refer Ds1307 DataSheet for more info*/
   9           
  10          #define DS1307_ID 0xD0     // Address cua ds1307 là 0x68 nhung phai dich phai 1 bit nen thanh 0xD0 vi ham 
             -I2C cua thu vien Hal yeu cau vay
  11          #define SEC_ADDRESS   0x00 // address to access ds1307 SEC register
  12          #define MIN_ADDRESS   0x01 // address to access ds1307 SEC register
  13          #define HOUR_ADDRESS   0x02 // address to access ds1307 SEC register
  14          #define DATE_ADDRESS  0x04 // address to access ds1307 DATE register
  15          #define control       0x07 // address to access ds1307 CONTROL register
  16           
  17          //ds1307 initilization
  18          void ds1307_Init()
  19          {
  20   1          i2c_Start();            // Start i2c communication
  21   1       
  22   1         ds1307_Write(DS1307_ID);   // gui dia chi cua DS1307
  23   1         ds1307_Write(control);    // truy cap vao thanh ghi control cua ds1307
  24   1       
  25   1          //ds1307_Write(0x00);        
  26   1       
  27   1          i2c_Stop();             // Stop Condition
  28   1       
  29   1       }
  30           void ds1307_Write(unsigned char dat)
  31          {
  32   1          i2c_Write(dat);   
  33   1          i2c_Clock();
  34   1      }
  35           
  36          unsigned char ds1307_Read()
  37          {
  38   1          unsigned char dat;
  39   1          dat = i2c_Read();   
  40   1          return(dat);
  41   1      }
  42          void ds1307_SetTime(int hh, int mm, int ss)
  43          {
  44   1          i2c_Start();            // Start i2c communication
  45   1       
  46   1          ds1307_Write(DS1307_ID);    
  47   1          ds1307_Write(SEC_ADDRESS);
  48   1          ds1307_Write(ss);           
  49   1          ds1307_Write(mm);           
  50   1          ds1307_Write(hh);     
  51   1           
  52   1          i2c_Stop();             // Stop i2c communication after Setting the Time
  53   1      }
C51 COMPILER V9.60.7.0   DS1307                                                            04/10/2023 13:50:05 PAGE 2   

  54          
  55          void ds1307_SetDate(unsigned char dd, unsigned char mm, unsigned char yy)
  56          {
  57   1          i2c_Start();            // Start i2c communication
  58   1       
  59   1          ds1307_Write(DS1307_ID);    
  60   1          ds1307_Write(DATE_ADDRESS);     
  61   1       
  62   1          ds1307_Write(dd);           
  63   1          ds1307_Write(mm);           
  64   1          ds1307_Write(yy);           
  65   1       
  66   1          i2c_Stop();             // Stop i2c communication after Setting the Date
  67   1      }
  68          
  69          void ds1307_GetTime(unsigned char *h_ptr,unsigned char *m_ptr,unsigned char *s_ptr)
  70          {
  71   1         i2c_Start();           // Start i2c communication
  72   1       
  73   1         ds1307_Write(DS1307_ID);    
  74   1         ds1307_Write(SEC_ADDRESS);          
  75   1       
  76   1         i2c_Stop();            
  77   1       
  78   1         i2c_Start();               
  79   1         ds1307_Write(0xD1);         // truyen dia chi (xem phan data read trong datasheet)
  80   1                                     
  81   1        
  82   1        *s_ptr = ds1307_Read();  i2c_Ack();     
  83   1        *m_ptr = ds1307_Read();  i2c_Ack();     
  84   1        *h_ptr = ds1307_Read();  i2c_NoAck();   
  85   1       
  86   1        i2c_Stop();               // stop i2c communication after reading the Time
  87   1       }
  88           
  89          void ds1307_GetDate(unsigned char *d_ptr,unsigned char *m_ptr,unsigned char *y_ptr)
  90          {
  91   1          i2c_Start();            // start i2c communication
  92   1       
  93   1          ds1307_Write(DS1307_ID);    
  94   1          ds1307_Write(DATE_ADDRESS);     
  95   1       
  96   1          i2c_Stop();             
  97   1       
  98   1       
  99   1         i2c_Start();             
 100   1         ds1307_Write(0xD1);          
 101   1                                  
 102   1       
 103   1        *d_ptr = ds1307_Read(); i2c_Ack();     
 104   1        *m_ptr = ds1307_Read(); i2c_Ack();     
 105   1        *y_ptr = ds1307_Read(); i2c_NoAck();   
 106   1       
 107   1        i2c_Stop();         // stop i2c communication after reading the Time
 108   1       }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    267    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   DS1307                                                            04/10/2023 13:50:05 PAGE 3   

   DATA SIZE        =   ----      27
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
