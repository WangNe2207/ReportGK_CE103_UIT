C51 COMPILER V9.60.7.0   MAIN                                                              04/26/2023 23:03:42 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h> 
   2          #include "lcd.h"     
   3          #include "ds1307.h" 
   4          #include "i2c.h"
   5          #include "delay.h"
   6          #include "Keypad4x4.h"
   7          #include <string.h>
   8          #include <stdio.h>
   9          volatile int Mode = 0; //thay doi len 1 de debug
  10          volatile int loop = 1;
  11          volatile int loop2 = 1;
  12          volatile int SingleTimeInput=0; // change to debug
  13          volatile int Hour = 0;// change to debug
  14          volatile int Min = 0;// change to debug
  15          volatile int Sec = 0;// change to debug
  16          int *OperandPointer = &Hour;
  17          char Convert(int in)
  18          {
  19   1        return (in % 10) + ((in / 10) % 10) * 16 + ((in / 100) % 10) * 16 * 16;
  20   1      }
  21          void ModeWatchTime(unsigned char sec,unsigned char min,unsigned char hour,unsigned char day,unsigned char 
             -month,unsigned char year)
  22          {
  23   1            lcd_Line_posnX();
  24   1            lcd_DisplayString(" Time:");
  25   1            lcd_Line_posnY();
  26   1            lcd_DisplayString(" Date:");
  27   1            ds1307_GetTime(&hour,&min,&sec);        
  28   1            lcd_curser_posn(0,6);      
  29   1            lcd_DisplayRtcTime(hour,min,sec);
  30   1            ds1307_GetDate(&day,&month,&year);        
  31   1            lcd_curser_posn(1,6);
  32   1            lcd_DisplayRtcDate(day,month,year);
  33   1            delay_ms(1000);
  34   1      }
  35          void ModeSetTime(unsigned char *button)
  36          {
  37   1          if(loop2 == 1)
  38   1          {
  39   2            lcd_Clear();
  40   2            loop2--;
  41   2          }
  42   1          if(loop == 1)
  43   1          {
  44   2            lcd_Line_posnX();
  45   2            lcd_DisplayString(" Set Your Time: ");
  46   2            lcd_Line_posnY();
  47   2            loop--;
  48   2          }
  49   1          *button = get_key();
  50   1          if(*button>0)
  51   1          {
  52   2            SingleTimeInput++;
  53   2            //lan nhap thu 1
C51 COMPILER V9.60.7.0   MAIN                                                              04/26/2023 23:03:42 PAGE 2   

  54   2            if(SingleTimeInput==1)
  55   2            {
  56   3              show_button(*button);
  57   3      
  58   3              if((*button != 4)&&(*button !=8)&&(*button != 12)&&(*button != 16)&&(*button != 15)&&(*button != 13))
  59   3              {
  60   4                num_generator(*button,OperandPointer);
  61   4              }
  62   3            }
  63   2            //lan nhap thu 2
  64   2            if(SingleTimeInput==2)
  65   2            {
  66   3              show_button(*button);
  67   3      
  68   3              if((*button != 4)&&(*button !=8)&&(*button != 12)&&(*button != 16)&&(*button != 15)&&(*button != 13))
  69   3              {
  70   4                num_generator(*button,OperandPointer);
  71   4              }
  72   3            }
  73   2            //lan nhap thu 3
  74   2            if(SingleTimeInput==3)
  75   2            {
  76   3              show_button(*button);
  77   3              if((*button == 12))
  78   3              {
  79   4                OperandPointer = &Min;
  80   4              }
  81   3            }
  82   2            //lan nhap thu 4
  83   2            if(SingleTimeInput==4)
  84   2            {
  85   3              show_button(*button);
  86   3      
  87   3              if((*button != 4)&&(*button !=8)&&(*button != 12)&&(*button != 16)&&(*button != 15)&&(*button != 13))
  88   3              {
  89   4                num_generator(*button,OperandPointer);
  90   4              }
  91   3            }
  92   2            //lan nhap thu 5
  93   2            if(SingleTimeInput==5)
  94   2            {
  95   3              show_button(*button);
  96   3              if((*button != 4)&&(*button !=8)&&(*button != 12)&&(*button != 16)&&(*button != 15)&&(*button != 13))
  97   3              {
  98   4                num_generator(*button,OperandPointer);
  99   4              }
 100   3            }
 101   2            //lan nhap thu 6
 102   2            if(SingleTimeInput==6)
 103   2            {
 104   3              show_button(*button);
 105   3              if((*button == 12))
 106   3              {
 107   4                OperandPointer = &Sec;
 108   4              }
 109   3              //if((*button != 4)&&(*button !=8)&&(*button != 12)&&(*button != 16)&&(*button != 15)&&(*button != 13)
             -)
 110   3              //{
 111   3              //  num_generator(*button,OperandPointer);
 112   3              //}
 113   3            }
 114   2            //lan nhap thu 7
C51 COMPILER V9.60.7.0   MAIN                                                              04/26/2023 23:03:42 PAGE 3   

 115   2            if(SingleTimeInput==7)
 116   2            {
 117   3              show_button(*button);
 118   3              if((*button != 4)&&(*button !=8)&&(*button != 12)&&(*button != 16)&&(*button != 15)&&(*button != 13))
 119   3              {
 120   4                num_generator(*button,OperandPointer);
 121   4              }
 122   3            }
 123   2            //lan nhap thu 8
 124   2            if(SingleTimeInput==8)
 125   2            {
 126   3              show_button(*button);
 127   3      
 128   3              if((*button != 4)&&(*button !=8)&&(*button != 12)&&(*button != 16)&&(*button != 15)&&(*button != 13))
 129   3              {
 130   4                num_generator(*button,OperandPointer);
 131   4                //TimeInput++;
 132   4              }
 133   3            }
 134   2            if(SingleTimeInput==9)
 135   2            {
 136   3      
 137   3              if(*button ==13)
 138   3              {
 139   4                SingleTimeInput=0;
 140   4                loop = 1;
 141   4                loop2 =1;
 142   4                ds1307_SetTime(Convert(Hour),Convert(Min),Convert(Sec)); 
 143   4                Hour = 0;
 144   4                Min = 0;
 145   4                Sec = 0;
 146   4                OperandPointer = &Hour;
 147   4                lcd_Clear();
 148   4                Mode = 0;
 149   4              }
 150   3            }     
 151   2      
 152   2          *button = 0;
 153   2          delay_ms(200);
 154   2          }
 155   1          
 156   1      }
 157          
 158          /* main program */
 159          void main() 
 160          {
 161   1          
 162   1          unsigned char sec,min,hour,day,month,year;
 163   1      
 164   1          unsigned char button;
 165   1          EA  = 1;    //cho phep ngat toan cuc
 166   1          EX0 = 1;    //chon ngat ngoai INT1
 167   1          IT0 = 1;    //chon ngat canh xuong
 168   1          lcd_Init();
 169   1          ds1307_Init();
 170   1      
 171   1          while(1)
 172   1          {
 173   2            if(Mode ==0)
 174   2            {
 175   3              ModeWatchTime(sec,min,hour,day,month,year);
 176   3            }
C51 COMPILER V9.60.7.0   MAIN                                                              04/26/2023 23:03:42 PAGE 4   

 177   2            if(Mode == 1)
 178   2            {
 179   3              ModeSetTime(&button);
 180   3            }
 181   2            if(Mode > 1)
 182   2            {
 183   3              Mode = 0;
 184   3            }
 185   2          }
 186   1      }
 187          void ISR_EX0 (void) interrupt 0
 188          {
 189   1        Mode++;
 190   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1010    ----
   CONSTANT SIZE    =     31    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
